<div id="comments-list">
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card m" id="comments-{{id}}"> <!-- 카드에 대한 요소 설명은 p481 -->
                <div class="card-header">
                   {{nickname}} <!-- 닉네임 보여주기 -->
                    <!-- 수정 버튼을 넣을 위치 -->
                    <!-- Button trigger modal -->
                    <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal"
                            data-bs-target="#comment-edit-modal" data-bs-id="{{id}}" data-bs-nickname="{{nickname}}" data-bs-body="{{body}}" data-bs-article-id="{{articleId}}"> <!-- 댓글의 요소들 저장 -->
                        <!-- data-bs-toggle="modal" - 클릭하면 모달이 나타나고 다시클릭시 사라짐, data-bs-target="#exampleModal" - 해당 id의 모달 실행, "btn btn-sm btn-outline-primary" - 흰바탕의 파란색 글씨로 변경 -->
                        수정
                    </button>
                </div>
                <div class="card-body">
                   {{body}} <!-- 댓글 본문 보여주기 -->
                </div>
            </div>
        </div>
    {{/commentDtos}}
</div>
<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">댓글 수정</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- 댓글 수정 폼 -->
                <form>
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input type="text" class="form-control" id="edit-comment-nickname">
                    </div>
                    <!-- 댓글 본문 입력 -->
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea type="text" class="form-control" row="3" id="edit-comment-body"></textarea>
                    </div>
                    <!-- 히든 인풋 -->
                        <input type="hidden" id="edit-comment-id">
                        <input type="hidden" id="edit-comment-article-id">
                    <!-- 전송 버튼 -->
                    <button type="button" class="btn btn-outline-primary" id="comment-update-btn">수정 완료</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- 모달 이벤트 처리, 받아 온 데이터를 모달의 각 폼에 출력 -->
<script>

    {
    // 모달 요소 선택
    const commentEditModal = document.querySelector("#comment-edit-modal");
    // 모달 이벤트 감지
    commentEditModal.addEventListener("show.bs.modal", function(event){ // show.bs.modal는 모달이 열리기 직전 발생하는 이벤트이다.(p524), 여기서 function(event)는 핸들러이고 event는 "show.bs.modal을 가리킴
    // 1. 트리거 버튼 선택
    const triggerBtn = event.relatedTarget; // event는 주체는 모달이기때문에 event.relatedTarget은 모달의 트리거 버튼이 된다.
    // 2. 데이터 가져오기
    const id = triggerBtn.getAttribute("data-bs-id");
    const nickname = triggerBtn.getAttribute("data-bs-nickname");
    const body = triggerBtn.getAttribute("data-bs-body");
    const articleId = triggerBtn.getAttribute("data-bs-article-id");
    // 3. 수정 폼에 데이터 반영
    document.querySelector("#edit-comment-nickname").value = nickname;
    document.querySelector("#edit-comment-body").value = body;
    document.querySelector("#edit-comment-id").value = id;
    document.querySelector("#edit-comment-article-id").value = articleId;
    console.log("Article ID:", articleId);
    });
    }

    {
    // 수정 완료 버튼 선택
    const commentUpdateBtn = document.querySelector("#comment-update-btn");
    commentUpdateBtn.addEventListener("click", function(){
    // 수정 댓글 객체 생성
    const comment = {
      id: document.querySelector("#edit-comment-id").value,
      nickname: document.querySelector("#edit-comment-nickname").value,
      body: document.querySelector("#edit-comment-body").value,
      article_id: document.querySelector("#edit-comment-article-id").value
    };
    console.log(comment);
    // 수정 REST API 호출
    const url = "/api/comments/" + comment.id;
    fetch(url, {
    method: "PATCH",
    headers: {
       "Content-Type" : "application/json"
    },
    body: JSON.stringify(comment) // comment 객체를 JSON 문자열로 변환 전송
    }).then(response => {
      // HTTP 응답 코드에 따른 메세지 출력
      const msg = (response.ok) ? "댓글이 수정됐습니다." : "댈글 수정 실패!";
      alert(msg);
      // 현재 페이지 새로 고침
      window.location.reload();
    });
    });
    }

</script>